[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mario Rodriguez",
    "section": "",
    "text": "Welcome to my site, I’m Mario! I’m currently an aspiring Software Developer studying Mathematics and Computer Science at St. Olaf College. I am a fast learner and love tackling complex problems of any type. In my of time you will often find me enjoying a nice board game with friends or in a good book."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Mini-Project 1\n\n\n\nR\n\n\nData Visualizations\n\n\n\nA Project from Data Science 2 where we explored Choropleth Maps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMini-Project 2\n\n\n\nR\n\n\nWeb Scraping\n\n\n\nA Project from Data Science 2 where we explored web scraping\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMini-Project 4 - Text Analysis\n\n\n\nR\n\n\nText Analysis\n\n\n\nA Project from Data Science 2 where we explored web scraping\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "projects/mini_project_1/index.html",
    "href": "projects/mini_project_1/index.html",
    "title": "Mini-Project 1",
    "section": "",
    "text": "Purpose and Scope of the Project\nFor this project I decided to take data from the U.S Energy Information Administration and create Choropleth maps with them. The two variables I decided to explore was the Total Energy Consumed by State and the Most Consumed Energy Source by State. Then for each variable, I made both a static and interactive version. I did this because I thought it would be valuable to understand where different places draw their energy from and how enegery they draw. This information could be useful in future endeavors to modify our power grid, such as deciding which places need or understanding which places would be the best candidates for alternative energy sources.\n\n\nGraphing Numerical Static\n\n\n\n\n\n\n\n\n\nThe graph above is a choropleth of the 48 states of the Continental US showing the total energy consumption of each state in 2022. Some insights that can be gained from this graph are that most of the states in the Rocky Mountains and the Great Plains consumed far less energy in 2022 than states in the Midwest. Additionally, California and Texas seems to be outlines in their region, consuming far more energy than their neighboring states.\n\n\nGraphing Categorical Static\n\n\n\n\n\n\n\n\n\nThe graph above is a choropleth of the 48 states of the Continental US showing the most consumed energy source of each state in 2022. Some insights that can be gained from this graph are that most states in the Rocky Mountains, the Midwest, and the Mid-Atlantic consumed more Natural Gas than any other energy source. We also see that most states in the South and Southwest consumed more Imported Electricity than any other energy source. It should also be noted that the very few states that consumed more Petroleum products than any other energy source can all be found in New England.\n\n\nGraphing Numerical Interactive\n\n\n\n\n\n\n\n\nGraphing Categorial Interactive\n\n\n[1] \"Imported Electricity\" \"Natural Gas\"          \"Petroleum\"           \n\n\n\n\n\n\nData Source: U.S. Energy Information Administration - State Energy Data System"
  },
  {
    "objectID": "projects/mini_project_2/index.html",
    "href": "projects/mini_project_2/index.html",
    "title": "Mini-Project 2",
    "section": "",
    "text": "Purpose and Scope of the Project\nFor this project we decided to collect the songs that appear in the Billboards Hot 100 and then also find their corresponding lyrics on Genius. We did this since we though it would be interesting to perform a bit of text analysis on these most popular songs, as it could give us a bit of insight in what makes a song popular at a given time. For this project, we will be showing the results for the 25 most popular songs, since it would take a lot more time to run these scraping and text analysis functions for all 100 songs in the Billboards Hot 100. Below you can see the functions we created and used, as well as the resulting tibbles.\n\n\nFunctions used in the creation of the the following tibbles\n\nget_song_lyrics_genius &lt;- function(song, artist){\n  #Format song into the format Genius expects\n  song_url &lt;- song |&gt; \n    str_to_lower() |&gt; \n    str_remove_all(\"[^\\\\w|\\\\s]\") |&gt; \n    str_replace_all(\"\\\\s\", \"-\") \n    \n  #Format artist into the format Genius expects\n  artist_url &lt;- artist |&gt; \n    str_to_lower() |&gt; \n    str_remove_all(\" featuring [\\\\D]+\") |&gt; \n    str_replace_all(\" \", \"-\") |&gt; \n    str_replace_all(\"&\", \"and\")\n  \n  #Create full Genius url \n  full_url &lt;- str_c(\"https://genius.com/\",\n                    artist_url, \n                    \"-\", \n                    song_url, \n                    \"-lyrics\" \n                    )\n  \n  #Initialize web scrapping session\n  session &lt;- bow(full_url, force = TRUE)\n  \n    #Scrape the page\n    page &lt;- scrape(session)\n    if(is.null(page)){\n      warning(\"Invalid URL Entered: \", full_url, call. = T, immediate. = T)\n      tibble(\n        song,\n        artist, \n        lyrics = NA\n      )\n    }\n    else{\n    \n      #Change all &lt;br&gt; tags into spaces \n      #(why does html_text not do this automatically!?)\n      xml_find_all(page, \".//br\") |&gt; \n        xml_add_sibling(\"p\", \" \")\n      \n      xml_find_all(page, \".//br\") |&gt; \n        xml_remove()\n      \n      #Extract Lyrics\n      lyrics &lt;- html_nodes(page, \".Lyrics__Container-sc-1ynbvzw-1\") |&gt; \n        html_text() |&gt; \n        str_replace_all(\"\\\\[[^\\\\]]+\\\\]\", \" \") |&gt; \n        paste(collapse = \"\")\n      \n      #Create Output tibble\n      tibble(\n        song, \n        artist, \n        lyrics\n      )\n    }\n}\n\n\nget_billboard_hot_100 &lt;- function(){\n  #Initialing Webscraping Session\n  session &lt;- bow(\"https://www.billboard.com/charts/hot-100/\", force = TRUE)\n  \n  #Vector for placements on the Billboard Hot 100\n  placement &lt;- (1:100)\n  \n  #Getting song titles from Billboard Hot 100\n  song_title &lt;- scrape(session) |&gt; \n    html_nodes(\"li.o-chart-results-list__item &gt; h3#title-of-a-story\") |&gt;\n    html_text() |&gt; \n    str_trim() #Removing white space from html_text\n  \n  #Getting artist from Billboard Hot 100\n  artist &lt;- scrape(session) |&gt; \n    html_nodes(\"li.o-chart-results-list__item &gt; span.c-label.a-no-trucate\") |&gt; \n    html_text() |&gt; \n    str_trim() #Removing white space from html_text\n  \n  #Getting how many weeks a song has been on the Billboard Hot 100\n  weeks_on_chart &lt;- scrape(session) |&gt; \n    html_nodes(\"ul.lrv-a-unstyle-list.lrv-u-flex.lrv-u-height-100p li:nth-child(6) &gt; span.c-label\") |&gt; \n    html_text() |&gt; \n    str_trim() #Removing white space from html_text\n  \n  #Getting the Week that this chart is describing \n  week_of_chart &lt;- scrape(session) |&gt;\n    html_nodes(\"p.c-tagline.a-font-primary-medium-xs\") |&gt; \n    html_text() |&gt; \n    str_extract(\"Week of (\\\\D+ \\\\d+, \\\\d{4})\", 1) |&gt; #RegEx to extract the week\n    mdy()\n  \n  #Combining into one tibble\n  tibble(\n    placement, \n    song_title,\n    artist, \n    weeks_on_chart,\n    week_of_chart,\n  )\n}\n\nCreating our tibble of songs in the Billboard Hot 100\n\n#Tibble that holds the entries of the Billboard Hot 100\ntop_100 &lt;- get_billboard_hot_100()\n\n#Tibble that has the title, artist, and lyrics of the 1st 25 songs in the \n#Billboard Hot 100\ntop_100_lyrics &lt;- map2(top_100$song_title[1:25],\n                       top_100$artist[1:25],\n                       \\(x, y) get_song_lyrics_genius(x, y)\n                       ) |&gt; \n  bind_rows()\n\n\n\nSentiment Analysis of top_100_lyrics\n\ntop_100_sentiment &lt;- top_100_lyrics |&gt; \n  mutate(word_count = SentimentAnalysis::analyzeSentiment(lyrics)$\"WordCount\", \n         sentimentGI = SentimentAnalysis::analyzeSentiment(lyrics)$\"SentimentGI\"\n         )\n\n\n\nResulting Tables\n\nprint(top_100, n = 25)\n\n# A tibble: 100 × 5\n   placement song_title            artist           weeks_on_chart week_of_chart\n       &lt;int&gt; &lt;chr&gt;                 &lt;chr&gt;            &lt;chr&gt;          &lt;date&gt;       \n 1         1 Love Somebody         Morgan Wallen    1              2024-11-02   \n 2         2 A Bar Song (Tipsy)    Shaboozey        28             2024-11-02   \n 3         3 Birds Of A Feather    Billie Eilish    23             2024-11-02   \n 4         4 Die With A Smile      Lady Gaga & Bru… 10             2024-11-02   \n 5         5 Espresso              Sabrina Carpent… 28             2024-11-02   \n 6         6 I Had Some Help       Post Malone Fea… 24             2024-11-02   \n 7         7 Lose Control          Teddy Swims      63             2024-11-02   \n 8         8 APT.                  ROSE & Bruno Ma… 1              2024-11-02   \n 9         9 Taste                 Sabrina Carpent… 9              2024-11-02   \n10        10 Beautiful Things      Benson Boone     40             2024-11-02   \n11        11 Good Luck, Babe!      Chappell Roan    29             2024-11-02   \n12        12 Please Please Please  Sabrina Carpent… 20             2024-11-02   \n13        13 Too Sweet             Hozier           31             2024-11-02   \n14        14 Not Like Us           Kendrick Lamar   25             2024-11-02   \n15        15 Timeless              The Weeknd & Pl… 4              2024-11-02   \n16        16 I Am Not Okay         Jelly Roll       19             2024-11-02   \n17        17 Lies Lies Lies        Morgan Wallen    16             2024-11-02   \n18        18 Hot To Go!            Chappell Roan    21             2024-11-02   \n19        19 I Love You, I'm Sorry Gracie Abrams    12             2024-11-02   \n20        20 Miles On It           Marshmello & Ka… 25             2024-11-02   \n21        21 Million Dollar Baby   Tommy Richman    26             2024-11-02   \n22        22 Cowgirls              Morgan Wallen F… 45             2024-11-02   \n23        23 Tu Boda               Oscar Maydon & … 1              2024-11-02   \n24        24 TGIF                  GloRilla         18             2024-11-02   \n25        25 Stargazing            Myles Smith      24             2024-11-02   \n# ℹ 75 more rows\n\nprint(top_100_lyrics, n = 25)\n\n# A tibble: 25 × 3\n   song                  artist                              lyrics             \n   &lt;chr&gt;                 &lt;chr&gt;                               &lt;chr&gt;              \n 1 Love Somebody         Morgan Wallen                       \"  Rumors goin' al…\n 2 A Bar Song (Tipsy)    Shaboozey                           \"  My baby want a …\n 3 Birds Of A Feather    Billie Eilish                       \"     I want you t…\n 4 Die With A Smile      Lady Gaga & Bruno Mars              \"  (Ooh, ooh)    I…\n 5 Espresso              Sabrina Carpenter                   \"  Now he's thinki…\n 6 I Had Some Help       Post Malone Featuring Morgan Wallen \"  You got a lotta…\n 7 Lose Control          Teddy Swims                         \"  Something's got…\n 8 APT.                  ROSE & Bruno Mars                   \"  채영이가 좋아하…\n 9 Taste                 Sabrina Carpenter                   \"  Oh, I leave qui…\n10 Beautiful Things      Benson Boone                        \"  For a while the…\n11 Good Luck, Babe!      Chappell Roan                       \"  It's fine, it's…\n12 Please Please Please  Sabrina Carpenter                   \"  I know I have g…\n13 Too Sweet             Hozier                              \"  It can't be sai…\n14 Not Like Us           Kendrick Lamar                      \"  Psst, I see dea…\n15 Timeless              The Weeknd & Playboi Carti          \"  XO Ooh, yeah, o…\n16 I Am Not Okay         Jelly Roll                          \"  I am not okay I…\n17 Lies Lies Lies        Morgan Wallen                       \"  I don't come do…\n18 Hot To Go!            Chappell Roan                       \"  Five, six Five,…\n19 I Love You, I'm Sorry Gracie Abrams                       \"  Two Augusts ago…\n20 Miles On It           Marshmello & Kane Brown             \"  New truck, big …\n21 Million Dollar Baby   Tommy Richman                       \"  Do it, baby, do…\n22 Cowgirls              Morgan Wallen Featuring ERNEST      \"  She'll set the …\n23 Tu Boda               Oscar Maydon & Fuerza Regida        \"     (Siento un v…\n24 TGIF                  GloRilla                            \"  GloRilla On the…\n25 Stargazing            Myles Smith                         \"  Ooh-ooh, ooh-oo…\n\nprint(top_100_sentiment, n = 25)\n\n# A tibble: 25 × 5\n   song                  artist                    lyrics word_count sentimentGI\n   &lt;chr&gt;                 &lt;chr&gt;                     &lt;chr&gt;       &lt;dbl&gt;       &lt;dbl&gt;\n 1 Love Somebody         Morgan Wallen             \"  Ru…        154      0.221 \n 2 A Bar Song (Tipsy)    Shaboozey                 \"  My…        230     -0.1   \n 3 Birds Of A Feather    Billie Eilish             \"    …        144      0.0417\n 4 Die With A Smile      Lady Gaga & Bruno Mars    \"  (O…        128      0.0859\n 5 Espresso              Sabrina Carpenter         \"  No…        200      0.135 \n 6 I Had Some Help       Post Malone Featuring Mo… \"  Yo…        158      0.0127\n 7 Lose Control          Teddy Swims               \"  So…        136     -0.0294\n 8 APT.                  ROSE & Bruno Mars         \"  채…        215      0.0744\n 9 Taste                 Sabrina Carpenter         \"  Oh…        151      0.245 \n10 Beautiful Things      Benson Boone              \"  Fo…        133      0.105 \n11 Good Luck, Babe!      Chappell Roan             \"  It…        277      0.314 \n12 Please Please Please  Sabrina Carpenter         \"  I …        159      0.314 \n13 Too Sweet             Hozier                    \"  It…        159      0.145 \n14 Not Like Us           Kendrick Lamar            \"  Ps…        493      0     \n15 Timeless              The Weeknd & Playboi Car… \"  XO…        300     -0.0133\n16 I Am Not Okay         Jelly Roll                \"  I …        115      0.130 \n17 Lies Lies Lies        Morgan Wallen             \"  I …        165     -0.164 \n18 Hot To Go!            Chappell Roan             \"  Fi…        186     -0.118 \n19 I Love You, I'm Sorry Gracie Abrams             \"  Tw…        153     -0.0261\n20 Miles On It           Marshmello & Kane Brown   \"  Ne…        184      0.0163\n21 Million Dollar Baby   Tommy Richman             \"  Do…        174     -0.0632\n22 Cowgirls              Morgan Wallen Featuring … \"  Sh…        211      0.0758\n23 Tu Boda               Oscar Maydon & Fuerza Re… \"    …        250     -0.016 \n24 TGIF                  GloRilla                  \"  Gl…        301     -0.0166\n25 Stargazing            Myles Smith               \"  Oo…        110      0.145"
  },
  {
    "objectID": "projects/mini_project_4/index.html",
    "href": "projects/mini_project_4/index.html",
    "title": "Mini-Project 4 - Text Analysis",
    "section": "",
    "text": "Purpose and Scope of the Project\nFor this project, I will be taking a look into the data set that me and my partner created through scraping the (Billboard Hot 100)[https://www.billboard.com/charts/hot-100/] and (Genius)[https://genius.com/] in Mini-Project 2. More specifically I’m curious to see if there is any correlation between the lyrics used by artist that have made it into the Billboard Hot 100. Note that the data used for this project was scrapped from the websites above on Nov, 21, 2024 and saved as a csv file for ease of use.\n\n\nFinding the Top Artists\nTo start this investigation, I want to look which artists where able to make it into the Billboard Hot 100 most often. To make it easier on myself, I will just be looking at the main artists, i.e. artists whose name appears before an &-sign or before “featuring”. Below you can see the top 15 artists who had the most songs appear on the Billboard Hot 100 (would be 10 but due to ties more artists where included).\n\ntop_100_lyrics |&gt; \n  #Filter out songs that we were not able to scrape the lyrics to\n  filter(!is.na(lyrics)) |&gt; \n  select(artist) |&gt; \n  #Mutate artists so it only shows the 1st artist mentioned, i.e. no featured artists\n  mutate(artist = str_extract(artist, \"^(.*?)( &| Featuring|$)\", group = 1),\n         artist = str_trim(artist),\n         )|&gt; \n  count(artist) |&gt; \n  slice_max(n, n = 10)\n\n              artist n\n1  Sabrina Carpenter 6\n2         Zach Bryan 4\n3      Chappell Roan 3\n4           GloRilla 3\n5      Gracie Abrams 3\n6      Morgan Wallen 3\n7        Teddy Swims 3\n8      Billie Eilish 2\n9        Don Toliver 2\n10             Gunna 2\n11        Jelly Roll 2\n12         Lady Gaga 2\n13       Post Malone 2\n14        The Weeknd 2\n15     Tito Double P 2\n\n\n\n\nSentiment Analysis\nFrom here, I want to take the top two artist who had the most songs appear on the Billboard Hot 100 and analyze the lyrics to their songs. My main goal here is to see how the sentiment of the lyrics might impact a song’s placement on the Billboard Hot 100.\n\ntidy_lyrics_sabrina &lt;- top_100_lyrics_labeled |&gt; \n  filter(str_detect(artist, \"Sabrina Carpenter\")) |&gt; \n  unnest_tokens(lyric, lyrics, token = \"words\")\n\n\ntidy_lyrics_sabrina |&gt; \n  inner_join(get_sentiments(\"bing\"), \n             relationship = \"many-to-many\", \n             by = join_by(lyric == word)\n             ) |&gt; \n  count(lyric, sentiment) |&gt; \n  group_by(sentiment) |&gt; \n  slice_max(n, n = 10) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = fct_reorder(lyric, n), y = n, fill = sentiment)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  facet_wrap( ~ sentiment, scales = \"free\") +\n  labs(title = \"Sabrina Carpenter's Most Common Lyrics by Sentiments\",\n       y = \"Count\", \n       x = \"Lyrics\"\n       )\n\n\n\n\n\n\n\n\nFrom the chart above, notice that Sabrina Carpenter uses a lot more unique words with a negative sentiment according to bing lexicon in her songs that reach the Billboard Hot 100. While comparably she uses often reuses words with a positive sentiment in her songs.\n\ntidy_lyrics_zach &lt;- top_100_lyrics_labeled |&gt; \n  filter(str_detect(artist, \"Zach Bryan\")) |&gt; \n  unnest_tokens(lyric, lyrics, token = \"words\")\n\n\ntidy_lyrics_zach |&gt; \n  inner_join(get_sentiments(\"bing\"), \n             relationship = \"many-to-many\", \n             by = join_by(lyric == word)\n             ) |&gt; \n  count(lyric, sentiment) |&gt; \n  group_by(sentiment) |&gt; \n  slice_max(n, n =10) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x = fct_reorder(lyric, n), y = n, fill = sentiment)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  facet_wrap( ~ sentiment, scales = \"free\") +\n  labs(title = \"Zach Bryan's Most Common Lyrics by Sentiments\",\n       y = \"Count\", \n       x = \"Lyrics\"\n       )\n\n\n\n\n\n\n\n\nSeems that this is the case with Zach Bryan’s lyrics as well, but this time notice that the count of each lyric is significantly lower than the lyrics that Sabrina Carpenter uses. This could be due to Sabrina having having two more songs on the Billboard Hot 100 over Zach Bryan or it could also mean that Sabrina resues the same lyrics more often compared to Zach. How interesting!\nNow I want to shift my focus these artists individual songs instead of the looking at lyrics from all their songs on the Billboard Hot 100. To do this I want to track the trajectory of each song and see if that has any colorlation on how high the song was on Billboard Hot 100.\n\ntidy_lyrics_sabrina |&gt; \n  group_by(song) |&gt; \n  #index approximates one line of the song\n  mutate(index = row_number() %/% 10) |&gt; \n  ungroup() |&gt; \n  inner_join(get_sentiments(\"bing\"), \n             relationship = \"many-to-many\", \n             by = join_by(lyric == word)\n             ) |&gt; \n  count(song, placement, index, sentiment) |&gt; \n  pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) |&gt;\n  mutate(sentiment = positive - negative) |&gt;\n  ggplot(aes(x = index, y = sentiment, fill = factor(placement))) +\n    geom_col() +\n    facet_wrap(~fct_reorder(song, placement), ncol = 2, scales = \"free_x\")+\n    labs(title = \"Sentiment Trajectory of Sabrina Carpenter's Songs that Made Billboard Hot 100\", \n         x = \"Appox. Song Line\", \n         y = \"Overall Sentiment of Line\", \n         fill = \"Placement\")\n\n\n\n\n\n\n\n\n\ntidy_lyrics_zach |&gt; \n  group_by(song) |&gt; \n  #index approximates one line of the song\n  mutate(index = row_number() %/% 10) |&gt; \n  ungroup() |&gt; \n  inner_join(get_sentiments(\"bing\"), \n             relationship = \"many-to-many\", \n             by = join_by(lyric == word)\n             ) |&gt; \n  count(song, placement, index, sentiment) |&gt; \n  pivot_wider(names_from = sentiment, values_from = n, values_fill = 0) |&gt;\n  mutate(sentiment = positive - negative) |&gt;\n  ggplot(aes(x = index, y = sentiment, fill = factor(placement))) +\n    geom_col() +\n    facet_wrap(~fct_reorder(song, placement), ncol = 2, scales = \"free_x\")+\n    labs(title = \"Sentiment Trajectory of Zach Bryan's Songs that Made Billboard Hot 100\", \n         x = \"Appox. Song Line\", \n         y = \"Overall Sentiment of Line\", \n         fill = \"Placement\")\n\n\n\n\n\n\n\n\nSadly since the bing lexicon doesn’t contain sentiment values for all words, it seems that some lyrics and therefore song lines where left out of the chart. With the data that did come through, it seems that the sentiment trajectory of each song has little to do with how high it placed in the Billboard Hot 100, as there doesn’t seem to be a clear cut pattern bewteen the sentiment trjectory of a song and how it ranked on the Billbord Hot 100.\n\n\nPunctuation in Lyrics\nFor the final part of this mini-project, I just wanted to find out one simple question that came to mind after doing all the sentiment analysis, which artist uses the most punctuation in their songs? Below you can see the code used to create the basis of the following tables.\n\nartist_punctuation &lt;- top_100_lyrics |&gt; \n  #Filter out songs that we were not able to scrape the lyrics to\n  filter(!is.na(lyrics)) |&gt; \n  #Mutate artists so it only shows the 1st artist mentioned, i.e. no featured artists\n  mutate(artist = str_extract(artist, \"^(.*?)( &| Featuring|$)\", group = 1),\n         artist = str_trim(artist),\n         #Count the number of !-points found in lyrics\n         exclamation_count = str_count(lyrics, \"!\"),\n         #Count the number of ?-marks found in lyrics\n         question_count = str_count(lyrics, \"\\\\?\"),\n         #count the number of . found in lyrics\n         period_count = str_count(lyrics, \"\\\\.\")) |&gt; \n  #Group by artist name and sum up all uses of \"!\", \"?\", and \".\" uses in all the \n  #artist's songs\n  group_by(artist) |&gt; \n  summarise(\n    exclamation_count = sum(exclamation_count),\n    question_count = sum(question_count),\n    period_count = sum(period_count), \n    total_punctuation = sum(exclamation_count, question_count, period_count)\n  )\n\n\nArtists Who Use the Most Puncuation Overall\n\nartist_punctuation |&gt; slice_max(total_punctuation, n = 10)\n\n# A tibble: 10 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 GloRilla                      0             27            6                33\n 2 Sabrina Carp…                 0             28            0                28\n 3 Dasha                         0             23            0                23\n 4 Chris Brown                   0             21            0                21\n 5 Kendrick Lam…                 0             18            0                18\n 6 Jimin                         0             15            0                15\n 7 Real Boston …                 0             15            0                15\n 8 Chappell Roan                 0             12            2                14\n 9 Rod Wave                      0             12            0                12\n10 Latto                         0             11            0                11\n\n\n\n\nArtists who use the Most Exclamation Marks\n\nartist_punctuation |&gt; slice_max(exclamation_count, n = 10)\n\n# A tibble: 61 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 Myles Smith                   1              0            0                 1\n 2 Oscar Maydon                  1              0            0                 1\n 3 21 Savage                     0              1            2                 3\n 4 Addison Rae                   0              0            0                 0\n 5 Benson Boone                  0              1            0                 1\n 6 BigXthaPlug                   0              0            0                 0\n 7 Billie Eilish                 0              4            0                 4\n 8 BossMan Dlow                  0              0            0                 0\n 9 Brandon Lake                  0              0            0                 0\n10 Chappell Roan                 0             12            2                14\n# ℹ 51 more rows\n\n\n\n\nArtists who Use the Most Question Marks\n\nartist_punctuation |&gt; slice_max(question_count, n = 10)\n\n# A tibble: 10 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 Sabrina Carp…                 0             28            0                28\n 2 GloRilla                      0             27            6                33\n 3 Dasha                         0             23            0                23\n 4 Chris Brown                   0             21            0                21\n 5 Kendrick Lam…                 0             18            0                18\n 6 Jimin                         0             15            0                15\n 7 Real Boston …                 0             15            0                15\n 8 Chappell Roan                 0             12            2                14\n 9 Rod Wave                      0             12            0                12\n10 Latto                         0             11            0                11\n\n\n\n\nArtists who Use the Most Periods\n\nartist_punctuation |&gt; slice_max(period_count, n = 10)\n\n# A tibble: 61 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 GloRilla                      0             27            6                33\n 2 21 Savage                     0              1            2                 3\n 3 Chappell Roan                 0             12            2                14\n 4 Gunna                         0              2            2                 4\n 5 NLE Choppa                    0              7            2                 9\n 6 Shaboozey                     0              1            2                 3\n 7 Jordan Davis                  0              0            1                 1\n 8 Addison Rae                   0              0            0                 0\n 9 Benson Boone                  0              1            0                 1\n10 BigXthaPlug                   0              0            0                 0\n# ℹ 51 more rows\n\n\nFrom these tables, we can clearly see that if artists use any puncutation, it will most likely be a question mark."
  },
  {
    "objectID": "projects/mini_project_4/index.html#artists-who-use-the-most-puncuation-overall",
    "href": "projects/mini_project_4/index.html#artists-who-use-the-most-puncuation-overall",
    "title": "Mini-Project 4 - Text Analysis",
    "section": "Artists Who Use the Most Puncuation Overall",
    "text": "Artists Who Use the Most Puncuation Overall\n\nartist_punctuation |&gt; slice_max(total_punctuation, n = 10)\n\n# A tibble: 10 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 GloRilla                      0             27            6                33\n 2 Sabrina Carp…                 0             28            0                28\n 3 Dasha                         0             23            0                23\n 4 Chris Brown                   0             21            0                21\n 5 Kendrick Lam…                 0             18            0                18\n 6 Jimin                         0             15            0                15\n 7 Real Boston …                 0             15            0                15\n 8 Chappell Roan                 0             12            2                14\n 9 Rod Wave                      0             12            0                12\n10 Latto                         0             11            0                11"
  },
  {
    "objectID": "projects/mini_project_4/index.html#artists-who-use-the-most-exclamation-marks",
    "href": "projects/mini_project_4/index.html#artists-who-use-the-most-exclamation-marks",
    "title": "Mini-Project 4 - Text Analysis",
    "section": "Artists who use the Most Exclamation Marks",
    "text": "Artists who use the Most Exclamation Marks\n\nartist_punctuation |&gt; slice_max(exclamation_count, n = 10)\n\n# A tibble: 61 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 Myles Smith                   1              0            0                 1\n 2 Oscar Maydon                  1              0            0                 1\n 3 21 Savage                     0              1            2                 3\n 4 Addison Rae                   0              0            0                 0\n 5 Benson Boone                  0              1            0                 1\n 6 BigXthaPlug                   0              0            0                 0\n 7 Billie Eilish                 0              4            0                 4\n 8 BossMan Dlow                  0              0            0                 0\n 9 Brandon Lake                  0              0            0                 0\n10 Chappell Roan                 0             12            2                14\n# ℹ 51 more rows"
  },
  {
    "objectID": "projects/mini_project_4/index.html#artists-who-use-the-most-question-marks",
    "href": "projects/mini_project_4/index.html#artists-who-use-the-most-question-marks",
    "title": "Mini-Project 4 - Text Analysis",
    "section": "Artists who Use the Most Question Marks",
    "text": "Artists who Use the Most Question Marks\n\nartist_punctuation |&gt; slice_max(question_count, n = 10)\n\n# A tibble: 10 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 Sabrina Carp…                 0             28            0                28\n 2 GloRilla                      0             27            6                33\n 3 Dasha                         0             23            0                23\n 4 Chris Brown                   0             21            0                21\n 5 Kendrick Lam…                 0             18            0                18\n 6 Jimin                         0             15            0                15\n 7 Real Boston …                 0             15            0                15\n 8 Chappell Roan                 0             12            2                14\n 9 Rod Wave                      0             12            0                12\n10 Latto                         0             11            0                11"
  },
  {
    "objectID": "projects/mini_project_4/index.html#artists-who-use-the-most-periods",
    "href": "projects/mini_project_4/index.html#artists-who-use-the-most-periods",
    "title": "Mini-Project 4 - Text Analysis",
    "section": "Artists who Use the Most Periods",
    "text": "Artists who Use the Most Periods\n\nartist_punctuation |&gt; slice_max(period_count, n = 10)\n\n# A tibble: 61 × 5\n   artist        exclamation_count question_count period_count total_punctuation\n   &lt;chr&gt;                     &lt;int&gt;          &lt;int&gt;        &lt;int&gt;             &lt;int&gt;\n 1 GloRilla                      0             27            6                33\n 2 21 Savage                     0              1            2                 3\n 3 Chappell Roan                 0             12            2                14\n 4 Gunna                         0              2            2                 4\n 5 NLE Choppa                    0              7            2                 9\n 6 Shaboozey                     0              1            2                 3\n 7 Jordan Davis                  0              0            1                 1\n 8 Addison Rae                   0              0            0                 0\n 9 Benson Boone                  0              1            0                 1\n10 BigXthaPlug                   0              0            0                 0\n# ℹ 51 more rows\n\n\nFrom these tables, we can clearly see that if artists use any puncutation, it will most likely be a question mark."
  }
]