---
title: 'Mini-Project 1 - Interactive Plots'
format:
  pdf: default
editor_options: 
  chunk_output_type: console
---

```{r}
#|include: false

# Load libraries -------------------------------------------------------------- 
library(tidyverse)
library(sf)
library(leaflet)
library(htmltools)
```


```{r}
# Load data and clean ---------------------------------------------------------
#Data from U.S. Energy Information Administration - State Energy Data System
raw_energy_data <- read.csv("~/School/SDS 264/SDS264_F24/Mini-Project 1/Data/eai_residential_energy_consumption.csv", na.strings = "NA")

#function to filter out extra states and terriories we don't want to include in
#our maps.
filter_extra_states <- function(df, state_var){
  df |> 
    filter(!({{ state_var }} %in% c("Alaska", 
                        "Hawaii", 
                        "Dist. of Col.", 
                        "District of Columbia",
                        "Puerto Rico")
          )
    )
}

# Creating tibble for numerical visualizations --------------------------------
clean_num_energy_data <- raw_energy_data |> 
  #Remove Alaska, Hawaii, Dist. of Columbia, and Puerto Rico, because we are  
  #graphing just the continental United Sates.
  mutate(state = str_squish(state)) |> 
  filter_extra_states(state)|> 
  #Make the tibble longer, giving each state/source pair it's own row
  pivot_longer(
    cols = natural_gas:electrical_system_energy_losses, 
    names_to = "source",
    values_to = "consumption"
  ) |> 
  #Find total energy consumption for each state 
  group_by(state) |> 
  summarise(
    total_consumption = sum(consumption, na.rm = TRUE)
  )
  
# Creating tibble for categorical visualizations ------------------------------
clean_cat_energy_data <- raw_energy_data |>
  #Remove Alaska, Hawaii, Dist. of Columbia, and Puerto Rico, because we are  
  #graphing just the continental United Sates.
  mutate(state = str_squish(state)) |> 
  filter_extra_states(state)|> 
  #Not including electrical_system_energy_losses as it not a source of energy
  select(!(electrical_system_energy_losses)) |> 
  #Make the tibble longer, giving each state/source pair it's own row
  pivot_longer(
    cols = natural_gas:imported_electricity, 
    names_to = "source",
    values_to = "consumption"
  ) |> 
  #Returns a tibble only showing the energy source with the greatest consumption   #  for each state.
  group_by(state) |> 
  slice(which.max(consumption)) |> 
  #Renaming column names to be more detailed
  rename(
    main_source = source,
    main_source_consumption = consumption
  )
```


```{r}
# Get info to draw US states --------------------------------------------------
states_sf <- read_sf("https://rstudio.github.io/leaflet/json/us-states.geojson") |> 
  select(name, geometry) |> 
  mutate(name = str_squish(name)) |> 
  filter_extra_states(name)
  
```


```{r}
# Combine tibbles with info on who to draw states -----------------------------
#Check that the joins are valid (they are are)
  #check join between state_sf and clean_num_energy_data
  states_sf |> 
    left_join(clean_num_energy_data, join_by(name == state)) |> 
    print(n = Inf)
  #check join between state_sf and clean_cat_energy_data
  states_sf |> 
    left_join(clean_cat_energy_data, join_by(name == state)) |> 
    print(n = Inf)

#Store valid joins into separate tibbles for visualizations 
visual_cat_energy_data <- states_sf |> 
  left_join(clean_cat_energy_data, by = c("name" = "state"))

visual_num_energy_data <- states_sf |> 
  left_join(clean_num_energy_data, by = c("name" = "state"))
```


```{r}
# Graphing Num Interactive ----------------------------------------------------
#Creating pop up labels
visual_num_energy_data_labs <- visual_num_energy_data |> 
  mutate(labels = str_c (
    name, " - <br/> Consumed ", total_consumption, " Trillion Btu in 2022")
  )
labels_num <- lapply(visual_num_energy_data_labs$labels, HTML)

#Creating interactive graph
leaflet(visual_num_energy_data_labs) |> 
  setView(-96, 37.8, 4) |> 
  addTiles() |> 
  addPolygons(
    weight = 2,
    opacity = 1,
    color = ~colorNumeric("viridis", visual_num_energy_data_labs$total_consumption)(visual_num_energy_data_labs$total_consumption),
    dashArray = "3",
    fillOpacity = 0.7,
    highlightOptions = highlightOptions(
      weight = 5,
      color = "gray",
      dashArray = "",
      fillOpacity = 0.7,
      bringToFront = TRUE
    ),
    label = labels_num,
    labelOptions = labelOptions(
      style = list("front-weight" = "normal", padding = "3px 8px"),
      textSize = "15px",
      direction = "auto"
    )
  )

```


```{r}
# Graphing Cat Interactive ----------------------------------------------------
#Creating pop up labels and change main_source values to remove '_' and use 
#title case.
visual_cat_energy_data_labs <- visual_cat_energy_data |> 
  mutate(main_source = as.factor(main_source),
         main_source = fct_recode(main_source,
         "Imported Electricity" = "imported_electricity",
         "Natural Gas" ="natural_gas",
         "Petroleum"= "petroleum"
         ),
         labels = str_c(
                    name, 
                    " -<br/>Consumed Most of Thier Energy from ", 
                    main_source, 
                    " in 2022. <br/> Which was ", 
                    main_source_consumption,
                    " trillion Btu"
                  )
  )

labels_cat <- lapply(visual_cat_energy_data_labs$labels, HTML)
  
#Creating factors for interactive graphs
levels(visual_cat_energy_data_labs$main_source) #Check to see distinct levels
fact_cat <- colorFactor(c("orange", "cyan", "purple"),
                        levels(visual_cat_energy_data_labs$main_source)
            )
  
leaflet(visual_cat_energy_data_labs) |> 
    setView(-96, 37.8, 4) |> 
    addTiles() |> 
    addPolygons(
      weight = 2,
      opacity = 1,
      color = "black",
      fillColor = ~ fact_cat(visual_cat_energy_data_labs$main_source),
      dashArray = "3",
      fillOpacity = 0.7,
      highlightOptions = highlightOptions(
        weight = 5,
        color = "grey",
        dashArray = "",
        fillOpacity = 0.7,
        bringToFront = TRUE
      ),
      label = labels_cat,
      labelOptions = labelOptions(
        style = list("font-weight" = "normal", padding = "3px 8px"),
        textsize = "15px",
        direction = "auto"
      )
    ) |> 
    addLegend(pal = fact_cat, 
              values = ~visual_cat_energy_data_labs$main_source, 
              opacity = 0.7, 
              title = NULL, 
              position = "bottomright"
    )
```

Data Source: [U.S. Energy Information Administration - State Energy Data System](https://www.eia.gov/state/seds/data.php?incfile=/state/seds/sep_sum/html/sum_btu_res.html&sid=US)